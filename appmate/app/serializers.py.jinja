from rest_framework import serializers

from app.models import *

__all__ = (
    {% for model in models %}
    '{{ model.name }}Serializer',
    {% endfor %}
)
{% for model in models %}


{% if model.name == 'Restaurant' %}
class {{ model.name }}Serializer(serializers.HyperlinkedModelSerializer):
    avg_point = serializers.FloatField(read_only=True)

    class Meta:
        model = {{ model.name }}
        fields = {{ model.name }}._fields() + ('avg_point',)
{% elif model.name == 'Rate' %}
class {{ model.name }}Serializer(serializers.HyperlinkedModelSerializer):
    thumbup = serializers.IntegerField(read_only=True)

    class Meta:
        model = {{ model.name }}
        fields = {{ model.name }}._fields() + ('thumbup',)

    def create(self, validated_data):
        rate = super().create(validated_data)
        rest = rate.restaurant
        user = rate.user

        data = {
            'point': rate.point,
            'comment': rate.pub_comment,
            'restaurant': {
                'name': rest.name,
                'info': rest.info,
                'type': rest.type,
                'phone': rest.phone,
            }
        }
        user.store_to_block(data)

        return rate
{% elif model.name == 'User' %}
class {{ model.name }}Serializer(serializers.HyperlinkedModelSerializer):
    b_account = serializers.JSONField(read_only=True)

    class Meta:
        model = {{ model.name }}
        fields = {{ model.name }}._fields() + ('b_account',)
{% else %}
class {{ model.name }}Serializer(serializers.HyperlinkedModelSerializer):
    class Meta:
        model = {{ model.name }}
        fields = {{ model.name }}._fields()
{% endif %}
{% endfor %}
